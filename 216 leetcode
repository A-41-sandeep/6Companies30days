class Solution {
    public void getCombinations(int index,int n,int k,int sum,List<Integer> curr,List<List<Integer>> lst)
    {
        if(sum==n && curr.size()==k)
            lst.add(new ArrayList(curr));
        if(sum>n) return;
        for(int i=index;i<=9;i++)
        {
            curr.add(i);
            sum+=i;
            getCombinations(i+1,n,k,sum,curr,lst);
            sum=sum-curr.get(curr.size()-1);
            curr.remove(curr.size()-1);
        }
    }
    
    public List<List<Integer>> combinationSum3(int k, int n) {
     List<List<Integer>> lst =new ArrayList();
        getCombinations(1,n,k,0,new ArrayList(),lst);
        return lst;
       
    }
}
